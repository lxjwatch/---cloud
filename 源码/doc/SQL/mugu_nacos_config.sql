/*
 Navicat Premium Data Transfer

 Source Server         : 本地Mysql
 Source Server Type    : MySQL
 Source Server Version : 50645
 Source Host           : localhost:3306
 Source Schema         : mugu_nacos_config

 Target Server Type    : MySQL
 Target Server Version : 50645
 File Encoding         : 65001

 Date: 27/07/2022 17:57:50
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 617 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (498, 'blog-article-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  rabbitmq:\r\n    virtual-host: /\r\n    username: admin\r\n    password: novabeyond\r\n    host: 127.0.0.1\r\n    port: 5672\r\n    # 开启消息confirm模式，消息发送到Exchange则触发回调\r\n    publisher-confirm-type: correlated\r\n    ##消息的return回调，消息未送到匹配的队列时则触发回调，如果为false则直接丢弃\r\n    publisher-returns: true\r\n    ## 手动ack\r\n    listener:\r\n      direct:\r\n        acknowledge-mode: manual\r\n      simple:\r\n        acknowledge-mode: manual\r\n  elasticsearch:\r\n    rest:\r\n      uris: http://127.0.0.1:8851\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_article?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.article.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文章模块\r\n      description: 文章相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', 'cacd5f2280c59cc2321d2d0db228c581', '2022-03-08 09:45:35', '2022-07-27 17:52:47', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (499, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000\r\n## 社交登录的配置，可以配置nacos中\r\nsecurity:\r\n  social:\r\n    ## github社交登录的配置，以下配置都需要去Github配置\r\n    github:\r\n      ## 是否开启github登录，默认false\r\n      enable: true\r\n      ## 客户端id\r\n      clientId: xx\r\n      ## 秘钥\r\n      clientSecret: xx\r\n      # 回调地址\r\n      redirectUrl: http://127.0.0.1/admin/github/callback.html\r\n    ## QQ的社交登录配置，以下配置都需要去QQ互联申请\r\n    qq:\r\n      ## 是否开启QQ社交登录，默认false\r\n      enable: true\r\n      ## appId\r\n      appId: xx\r\n      ## 秘钥\r\n      appKey: xx\r\n      ## 回调地址\r\n      redirectUrl: https://www.java-family.cn/admin/qq/callback.html\r\n', '574cb086dda328ad29a6f2c0968fd255', '2022-03-08 09:45:35', '2022-07-27 17:57:35', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (500, 'blog-comments-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_comment?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.comments.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 评论模块\r\n      description: 评论相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '0c1c9a9769755db06b6274361b220bc8', '2022-03-08 09:45:35', '2022-03-08 10:07:28', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (501, 'blog-file-server-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_file_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.file.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文件服务模块\r\n      description: 文件服务模块接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n# 文件路径相关配置\r\nftp:\r\n  # ip地址\r\n  host: 127.0.0.1\r\n  # 用户名\r\n  username: root\r\n  # 密码\r\n  password: viva202103(*\r\n  # 端口，默认22\r\n  port: 22\r\n  ## 基础文件路径\r\n  basePath: /usr/local/file\r\n  ## 图片的路径\r\n  imagePath: ${ftp.basePath}/images/\r\n  ## nginx映射的url\r\n  urlPrefix: http://127.0.0.1:9082\r\n  ## 图片映射的url\r\n  imageUrlPrefix: ${ftp.urlPrefix}/images/', '9042de2b8e3dababc73fe594d7cdb8ba', '2022-03-08 09:45:35', '2022-07-27 17:53:19', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (502, 'blog-friendlinks-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_friendlinks?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\n  swagger:\r\n    basePackage: com.mugu.blog.friendlinks.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 友链模块接口\r\n      description: 友链相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      blog-file-server:\r\n        connectTimeout: 3000\r\n        readTimeout: 3000', '6f232978a090fb4c626e7afb50b22dfe', '2022-03-08 09:45:35', '2022-03-16 09:30:07', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (503, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /blog-auth-server/oauth/bind\r\n        - /blog-auth-server/social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**', '50ce9d72086728e832fbf9ab9ee520c5', '2022-03-08 09:45:35', '2022-07-27 17:41:28', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (504, 'blog-monitor-server-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  security:\r\n    user:\r\n      name: admin\r\n      password: 123456\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 木谷博客后台服务监控\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    logfile:\r\n      enabled: true         #可在线查看日志', '348e688089262ab4e24d54bb0fe2ad90', '2022-03-08 09:45:35', '2022-03-18 10:18:43', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (505, 'blog-picture-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_picture?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.picture.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 相册模块\r\n      description: 相册相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      blog-file-server:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000', '413dd9f2ede6788ccbc5ab1358da50c0', '2022-03-08 09:45:35', '2022-07-07 16:21:29', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (506, 'blog-user-boot-dev.yaml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  swagger:\r\n    basePackage: com.mugu.blog.user.boot.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 用户模块\r\n      description: 用户相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '1c288e609dab0a4a773239d054920512', '2022-03-08 09:45:35', '2022-07-03 10:55:05', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (507, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (508, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (509, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (510, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (511, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', '0f8db59a3b7f2823f38a70c308361836', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (512, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (513, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (514, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (515, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (516, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (517, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (518, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (519, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (520, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (521, 'service.default.grouplist', 'SEATA_GROUP', '127.0.0.1:8091', 'c32ce0d3e264525dcdada751f98143a3', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (522, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (523, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (524, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (525, 'client.rm.lock.retryInterval', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (526, 'client.rm.lock.retryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (527, 'client.rm.lock.retryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (528, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (529, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (530, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (531, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (532, 'client.rm.sagaBranchRegisterEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (533, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (534, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (535, 'client.tm.degradeCheck', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (536, 'client.tm.degradeCheckAllowTimes', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (537, 'client.tm.degradeCheckPeriod', 'SEATA_GROUP', '2000', '08f90c1a417155361a5c4b8d297e0d78', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (538, 'store.mode', 'SEATA_GROUP', 'db', 'd77d5e503ad1439f585ac494268b351b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (539, 'store.file.dir', 'SEATA_GROUP', 'file_store/data', '6a8dec07c44c33a8a9247cba5710bbb2', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (540, 'store.file.maxBranchSessionSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (541, 'store.file.maxGlobalSessionSize', 'SEATA_GROUP', '512', '10a7cdd970fe135cf4f7bb55c0e3b59f', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (542, 'store.file.fileWriteBufferCacheSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (543, 'store.file.flushDiskMode', 'SEATA_GROUP', 'async', '0df93e34273b367bb63bad28c94c78d5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (544, 'store.file.sessionReloadReadSize', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (545, 'store.db.datasource', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (546, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (547, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.jdbc.Driver', '683cf0c3a5a56cec94dfac94ca16d760', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (548, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://127.0.0.1:3306/mugu_seata_server?useUnicode=true', '87b525d1f34ff6da2e2359cd91639d91', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (549, 'store.db.user', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (550, 'store.db.password', 'SEATA_GROUP', '123456', '67a118526c222a5052b9bda5df133e9c', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (551, 'store.db.minConn', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (552, 'store.db.maxConn', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (553, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (554, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (555, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (556, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (557, 'store.db.maxWait', 'SEATA_GROUP', '5000', 'a35fe7f7fe8217b4369a0af4244d1fca', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (558, 'store.redis.host', 'SEATA_GROUP', '127.0.0.1', 'f528764d624db129b32c21fbca0cb8d6', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (559, 'store.redis.port', 'SEATA_GROUP', '6379', '92c3b916311a5517d9290576e3ea37ad', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (560, 'store.redis.maxConn', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (561, 'store.redis.minConn', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (562, 'store.redis.database', 'SEATA_GROUP', '0', 'cfcd208495d565ef66e7dff9f98764da', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (563, 'store.redis.password', 'SEATA_GROUP', 'null', '37a6259cc0c1dae299a7866489dff0bd', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (564, 'store.redis.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (565, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (566, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (567, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (568, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (569, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (570, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (571, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (572, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (573, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (574, 'client.undo.onlyCareUpdateColumns', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (575, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (576, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (577, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (578, 'client.log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (579, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (580, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (581, 'metrics.enabled', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (582, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (583, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (584, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (585, 'service.vgroupMapping.blog-user-boot-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (586, 'service.vgroupMapping.blog-article-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (587, 'service.vgroupMapping.blog-comments-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (588, 'service.vgroupMapping.blog-picture-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (589, 'service.vgroupMapping.blog-file-server-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (590, 'service.vgroupMapping.blog-friendlinks-tx-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (591, 'share-nacos-registry.yaml', 'DEFAULT_GROUP', 'spring:\r\n  cloud:\r\n    nacos:\r\n      ## 注册中心配置\r\n      discovery:\r\n        # nacos的服务地址，nacos-server中IP地址:端口号\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        metadata:\r\n          management:\r\n            ## 修改spring boot admin获取actuator信息的默认地址\r\n            context-path: ${server.servlet.context-path}/actuator', '65a13d8aa8b36b6318440bf40462dcdb', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (592, 'share-actuator.yaml', 'DEFAULT_GROUP', 'management:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    logfile:\r\n      enabled: true         #可在线查看日志', 'dad5f74ff4a511b3c2dcadb4e84d2d64', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (593, 'share.pagehelper.yaml', 'DEFAULT_GROUP', 'pagehelper:\r\n  helperDialect: mysql\r\n  reasonable: true\r\n  supportMethodsArguments: true\r\n  params: count=countSql', '6ed802c33d14f7140765fe95798deb00', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (594, 'share-seata.yaml', 'DEFAULT_GROUP', '## 客户端seata的相关配置\r\nseata:\r\n  ## 是否开启seata，默认true\r\n  enabled: true\r\n  application-id: ${spring.application.name}\r\n  ## seata事务组的名称，一定要和config.tx(nacos)中配置的相同\r\n  tx-service-group: ${seata.application-id}-tx-group\r\n  ## 配置中心的配置\r\n  config:\r\n    ## 使用类型nacos\r\n    type: nacos\r\n    ## nacos作为配置中心的相关配置，需要和server在同一个注册中心下\r\n    nacos:\r\n      ## 命名空间，需要server端(registry和config)、nacos配置client端(registry和config)保持一致\r\n      namespace: ${spring.cloud.nacos.config.namespace}\r\n      ## 地址\r\n      server-addr: ${spring.cloud.nacos.discovery.server-addr}\r\n      ## 组， 需要server端(registry和config)、nacos配置client端(registry和config)保持一致\r\n      group: SEATA_GROUP\r\n      ## 用户名和密码\r\n      username: ${spring.cloud.nacos.config.username}\r\n      password: ${spring.cloud.nacos.config.password}\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      ## 这里的名字一定要和seata服务端中的名称相同，默认是seata-server\r\n      application: seata-server\r\n      ## 需要server端(registry和config)、nacos配置client端(registry和config)保持一致\r\n      group: ${seata.config.nacos.group}\r\n      namespace: ${seata.config.nacos.namespace}\r\n      username: ${seata.config.nacos.username}\r\n      password: ${seata.config.nacos.password}\r\n      server-addr: ${spring.cloud.nacos.discovery.server-addr}', '03e245231153c1b51333a8d3399fa4e5', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (595, 'share-sentinel.yaml', 'DEFAULT_GROUP', 'spring:\r\n  cloud:\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1', '1a69b2f2a7b4626b9cf5f720a4c601a1', '2022-03-08 09:45:35', '2022-03-14 20:21:01', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (596, 'blog-gateway-degrade', 'DEFAULT_GROUP', '[\r\n  {\r\n    \"resource\": \"blog-article\",\r\n    \"limitApp\": \"default\",\r\n    \"grade\": 0,\r\n    \"count\": 2000,\r\n    \"slowRatioThreshold\": 0.2,\r\n    \"minRequestAmount\": 5,\r\n    \"statIntervalMs\": 1000,\r\n    \"timeWindow\": 2\r\n  },\r\n  \r\n  {\r\n    \"resource\": \"blog-article\",\r\n    \"limitApp\": \"default\",\r\n    \"grade\": 2,\r\n    \"count\": 10,\r\n    \"slowRatioThreshold\": 0.2,\r\n    \"minRequestAmount\": 5,\r\n    \"statIntervalMs\": 1000,\r\n    \"timeWindow\": 120\r\n  },\r\n  {\r\n    \"resource\": \"blog-comments\",\r\n    \"limitApp\": \"default\",\r\n    \"grade\": 0,\r\n    \"count\": 2000,\r\n    \"slowRatioThreshold\": 0.2,\r\n    \"minRequestAmount\": 5,\r\n    \"statIntervalMs\": 1000,\r\n    \"timeWindow\": 2\r\n  },\r\n  \r\n  {\r\n    \"resource\": \"blog-comments\",\r\n    \"limitApp\": \"default\",\r\n    \"grade\": 2,\r\n    \"count\": 20,\r\n    \"slowRatioThreshold\": 0.2,\r\n    \"minRequestAmount\": 5,\r\n    \"statIntervalMs\": 1000,\r\n    \"timeWindow\": 120\r\n  }\r\n]', 'f620b828c07f80b26c2a730f8c5859a1', '2022-03-08 09:45:35', '2022-03-08 09:49:06', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (597, 'blog-gateway-flow', 'DEFAULT_GROUP', '[\r\n    {\r\n        \"resource\": \"front_article\",\r\n        \"resourceMode\":1,\r\n        \"grade\": 1, \r\n        \"count\": 10,\r\n        \"controlBehavior\": 0\r\n    },\r\n    {\r\n        \"resource\": \"front_article\",\r\n        \"resourceMode\":1,\r\n        \"grade\": 0, \r\n        \"count\": 100\r\n    },\r\n    {\r\n        \"resource\": \"blog-comments\",\r\n        \"resourceMode\":0,\r\n        \"grade\": 0, \r\n        \"count\": 100\r\n    },\r\n    {\r\n        \"resource\": \"blog-comments\",\r\n        \"resourceMode\":0,\r\n        \"grade\": 1, \r\n        \"count\": 10\r\n    },\r\n    {\r\n        \"resource\": \"blog-picture\",\r\n        \"resourceMode\":0,\r\n        \"grade\": 0, \r\n        \"count\": 10\r\n    },\r\n    {\r\n        \"resource\": \"blog-picture\",\r\n        \"resourceMode\":0,\r\n        \"grade\": 1, \r\n        \"count\": 10\r\n    }\r\n]\r\n', 'e6f8b0fb62977059f012c12ced9ad6cb', '2022-03-08 09:45:35', '2022-03-17 20:07:52', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'null', 'null');
INSERT INTO `config_info` VALUES (599, 'share-feign.yaml', 'DEFAULT_GROUP', 'feign:\r\n  ##开启熔断降级\r\n  sentinel:\r\n    enabled: true\r\n  client:\r\n    httpclient:\r\n      # 开启 Http Client\r\n      enabled: true\r\n  ## 开启压缩\r\n  compression:\r\n    request:\r\n      enabled: true\r\n      ## 开启压缩的阈值，单位字节，默认2048，即是2k，这里为了演示效果设置成10字节\r\n      min-request-size: 1024\r\n      mime-types: text/xml,application/xml,application/json\r\n    response:\r\n      enabled: true', '6dbfd3b3b428e1eab2b2ed74a3be7101', '2022-03-16 09:21:43', '2022-03-16 09:29:02', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'feign的公共配置', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (610, 'blog-gateway-api-group', 'DEFAULT_GROUP', '[\r\n  {\r\n    \"apiName\": \"front_article\",\r\n    \"predicateItems\": [\r\n      {\r\n        \"pattern\": \"/blog-article/front/type/**\",\r\n         \"matchStrategy\": 1\r\n      },\r\n      {\r\n        \"pattern\": \"/blog-article/front/article/**\",\r\n        \"matchStrategy\": 1\r\n      }\r\n    ]\r\n  }\r\n]', '5e8b48d8ad9ff6020f585bd2fc34bcd0', '2022-03-17 17:28:22', '2022-03-17 20:02:50', NULL, '0:0:0:0:0:0:0:1', '', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'null', 'null', 'null', 'json', 'null');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(20) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 928 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (499, 903, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000', 'f8ef2a88d6bb1d809a4e37db5a396f0e', '2022-06-30 18:40:46', '2022-06-30 18:40:46', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (506, 904, 'blog-user-boot-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  swagger:\r\n    basePackage: com.mugu.blog.user.boot.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 用户模块\r\n      description: 用户相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '1d22f16eafe261fcad9fed9cdb627a2a', '2022-06-30 18:43:42', '2022-06-30 18:43:43', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 905, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '06dc4cf2591ef198df4f236dd43a9113', '2022-06-30 18:47:27', '2022-06-30 18:47:27', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 906, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '67cd9ec2b1622636a88834cdfe333c27', '2022-06-30 18:50:08', '2022-06-30 18:50:08', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 907, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/check_token\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', 'cb17134af3be3179a51a0ac2bce45e5f', '2022-06-30 18:50:57', '2022-06-30 18:50:57', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 908, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/oauth/form/login\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '6d4249609939f76b1b7f7aa069f5d5e6', '2022-06-30 18:52:48', '2022-06-30 18:52:49', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (499, 909, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000', '94a92869b561f08eb15a30abb8c7050e', '2022-06-30 18:56:32', '2022-06-30 18:56:33', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (506, 910, 'blog-user-boot-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  swagger:\r\n    basePackage: com.mugu.blog.user.boot.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 用户模块\r\n      description: 用户相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '1c288e609dab0a4a773239d054920512', '2022-06-30 18:56:58', '2022-06-30 18:56:59', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (499, 911, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000', 'f8ef2a88d6bb1d809a4e37db5a396f0e', '2022-07-03 10:54:36', '2022-07-03 10:54:36', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (506, 912, 'blog-user-boot-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  swagger:\r\n    basePackage: com.mugu.blog.user.boot.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 用户模块\r\n      description: 用户相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '1d22f16eafe261fcad9fed9cdb627a2a', '2022-07-03 10:55:05', '2022-07-03 10:55:05', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 913, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '2259c18566e1dbbeb73fde476d7fdeec', '2022-07-07 14:06:52', '2022-07-07 14:06:52', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (498, 914, 'blog-article-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  rabbitmq:\r\n    virtual-host: /\r\n    username: admin\r\n    password: novabeyond\r\n    host: 127.0.0.1\r\n    port: 5672\r\n    # 开启消息confirm模式，消息发送到Exchange则触发回调\r\n    publisher-confirm-type: correlated\r\n    ##消息的return回调，消息未送到匹配的队列时则触发回调，如果为false则直接丢弃\r\n    publisher-returns: true\r\n    ## 手动ack\r\n    listener:\r\n      direct:\r\n        acknowledge-mode: manual\r\n      simple:\r\n        acknowledge-mode: manual\r\n  elasticsearch:\r\n    rest:\r\n      uris: http://127.0.0.1:8851\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_article?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.article.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文章模块\r\n      description: 文章相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '1fa6df9fe4a5ca9410e8c4ed2411b810', '2022-07-07 16:02:32', '2022-07-07 16:02:32', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (498, 915, 'blog-article-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  rabbitmq:\r\n    virtual-host: /\r\n    username: admin\r\n    password: novabeyond\r\n    host: 127.0.0.1\r\n    port: 5672\r\n    # 开启消息confirm模式，消息发送到Exchange则触发回调\r\n    publisher-confirm-type: correlated\r\n    ##消息的return回调，消息未送到匹配的队列时则触发回调，如果为false则直接丢弃\r\n    publisher-returns: true\r\n    ## 手动ack\r\n    listener:\r\n      direct:\r\n        acknowledge-mode: manual\r\n      simple:\r\n        acknowledge-mode: manual\r\n  elasticsearch:\r\n    rest:\r\n      uris: http://127.0.0.1:8851\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_article?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.article.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文章模块\r\n      description: 文章相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', 'cacd5f2280c59cc2321d2d0db228c581', '2022-07-07 16:04:30', '2022-07-07 16:04:31', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (501, 916, 'blog-file-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_file_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.file.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文件服务模块\r\n      description: 文件服务模块接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n# 文件路径相关配置\r\nftp:\r\n  # ip地址\r\n  host: 127.0.0.1\r\n  # 用户名\r\n  username: root\r\n  # 密码\r\n  password: viva202103(*\r\n  # 端口，默认22\r\n  port: 22\r\n  ## 基础文件路径\r\n  basePath: /usr/local/file\r\n  ## 图片的路径\r\n  imagePath: ${ftp.basePath}/images/\r\n  ## nginx映射的url\r\n  urlPrefix: http://127.0.0.1:9082\r\n  ## 图片映射的url\r\n  imageUrlPrefix: ${ftp.urlPrefix}/images/', '3946aaa403f44ccfbbd958ce2834f059', '2022-07-07 16:21:03', '2022-07-07 16:21:04', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (505, 917, 'blog-picture-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_picture?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.picture.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 相册模块\r\n      description: 相册相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      blog-file-server:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000', 'd7fdb01607ba28f9558af7941b2944d4', '2022-07-07 16:21:29', '2022-07-07 16:21:29', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 918, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '3459cf6e74d14d94f3e5c6cda89a2700', '2022-07-11 21:00:25', '2022-07-11 21:00:25', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 919, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '528088d996d68c1c2e1458a7a66fc909', '2022-07-11 21:07:05', '2022-07-11 21:07:06', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 920, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /blog-auth-server/oauth/social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', 'b70bf2512fb26e9e6321aee1b9c5d809', '2022-07-12 11:17:59', '2022-07-12 11:17:59', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 921, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /blog-auth-server/social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '07bbee79b7af9302f969c5d80a1079fe', '2022-07-14 13:05:42', '2022-07-14 13:05:42', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 922, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /blog-auth-server/oauth/bind\r\n        - /blog-auth-server/social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n\r\n', '384a7282b317692c6ccbe63329b0b240', '2022-07-27 17:39:50', '2022-07-27 17:39:51', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (503, 923, 'blog-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  cloud:\r\n    gateway:\r\n      ## 路由\r\n      routes:\r\n        ## id只要唯一即可，名称任意\r\n        - id: blog-user-boot\r\n          uri: lb://blog-user-boot\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-user-boot/**\r\n        - id: blog-auth-server\r\n          uri: lb://blog-auth-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-auth-server/**\r\n          filters:\r\n            - PreserveHostHeader\r\n        - id: blog-article\r\n          uri: lb://blog-article\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-article/**\r\n        - id: blog-comments\r\n          uri: lb://blog-comments\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-comments/**\r\n        - id: blog-picture\r\n          uri: lb://blog-picture\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-picture/**\r\n        - id: blog-friendlinks\r\n          uri: lb://blog-friendlinks\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-friendlinks/**\r\n        - id: blog-file-server\r\n          uri: lb://blog-file-server\r\n          predicates:\r\n            ## Path Route Predicate Factory断言\r\n            - Path=/blog-file-server/**\r\n    ## 整合sentinel，配置sentinel控制台的地址\r\n    sentinel:\r\n      transport:\r\n        ## 指定控制台的地址\r\n        dashboard: 127.0.0.1:8856\r\n        port: 8719\r\n        ## 指定本服务的公网IP，否则心跳包监听不到\r\n        client-ip: 127.0.0.1\r\n      #配置限流之后，响应内容\r\n      scg:\r\n        fallback:\r\n          ## 两种模式，一种是response返回文字提示信息，\r\n          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)\r\n          mode: response\r\n          ## 响应的状态\r\n          response-status: 200\r\n          ## 响应内容\r\n          response-body: \'{\"code\": 3002,\"msg\": \"网络拥挤，请稍后再试...\",\"data\": null}\'\r\n      ## nacos持久化配置\r\n      datasource:\r\n        ## 配置流控规则，名字任意\r\n        ds-flow:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-flow\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控\r\n            rule-type: gw-flow\r\n        ##ApI分组的配置\r\n        ds-api-group:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-api-group\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: gw-api-group\r\n        ## 配置降级规则，名字任意\r\n        ds-degrade:\r\n          nacos:\r\n            ## nacos的地址\r\n            server-addr: ${spring.cloud.nacos.config.server-addr}\r\n            username: ${spring.cloud.nacos.config.username}\r\n            password: ${spring.cloud.nacos.config.password}\r\n            namespace: ${spring.cloud.nacos.config.namespace}\r\n            ## 配置ID\r\n            dataId: ${spring.application.name}-degrade\r\n            ## 配置分组，默认是DEFAULT_GROUP\r\n            groupId: DEFAULT_GROUP\r\n            ## 配置存储的格式\r\n            data-type: json\r\n            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现\r\n            rule-type: degrade\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  # JWT令牌的key\r\n  server:\r\n    signKey: blog\r\n    ignore:\r\n      urls:\r\n        - /blog-auth-server/oauth/token\r\n        - /blog-auth-server/oauth/authorize\r\n        - /blog-auth-server/oauth/check_token\r\n        # form表单登录页面\r\n        - /blog-auth-server/oauth/login\r\n        # form表单登录url\r\n        - /blog-auth-server/form/login\r\n         # 通过application/json方式获取token\r\n        - /blog-auth-server/oauth/json/token\r\n        - /blog-auth-server/oauth/bind\r\n        - /blog-auth-server/social/**\r\n        - /swagger-ui.html\r\n        - /swagger-ui/*\r\n        - /swagger-resources/**\r\n        - /v2/api-docs\r\n        - /v3/api-docs\r\n        - /webjars/**\r\n        - /doc.html\r\n        - /**/v2/api-docs\r\n        - /blog-article/front/**\r\n        - /blog-picture/front/**\r\n        - /blog-friendlinks/front/**\r\n        - /blog-comments/comment/list\r\n        - /blog-comments/comment/add\r\n        - /blog-comments/message/add\r\n        - /blog-comments/message/list\r\n        - /actuator/**\r\n        - /instances/**\r\n        \r\n## 社交登录的配置，可以配置nacos中\r\nsecurity:\r\n  social:\r\n    ## github社交登录的配置，以下配置都需要去Github配置\r\n    github:\r\n      ## 是否开启github登录，默认false\r\n      enable: true\r\n      ## 客户端id\r\n      clientId: 1f0fb0ff59c43881c756\r\n      ## 秘钥\r\n      clientSecret: 5bdcb60ebddbab050a927162efaeb576f536c8f8\r\n      # 回调地址\r\n      redirectUrl: http://127.0.0.1/admin/github/callback.html\r\n    ## QQ的社交登录配置，以下配置都需要去QQ互联申请\r\n    qq:\r\n      ## 是否开启QQ社交登录，默认false\r\n      enable: true\r\n      ## appId\r\n      appId: 102018118\r\n      ## 秘钥\r\n      appKey: CJG0Yt22pNm14tTo\r\n      ## 回调地址\r\n      redirectUrl: https://www.java-family.cn/admin/qq/callback.html\r\n', '919bf63fe17152d8974489077ae6401d', '2022-07-27 17:41:27', '2022-07-27 17:41:28', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (499, 924, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000', '94a92869b561f08eb15a30abb8c7050e', '2022-07-27 17:41:46', '2022-07-27 17:41:47', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (498, 925, 'blog-article-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  rabbitmq:\r\n    virtual-host: /\r\n    username: admin\r\n    password: novabeyond\r\n    host: 127.0.0.1\r\n    port: 5672\r\n    # 开启消息confirm模式，消息发送到Exchange则触发回调\r\n    publisher-confirm-type: correlated\r\n    ##消息的return回调，消息未送到匹配的队列时则触发回调，如果为false则直接丢弃\r\n    publisher-returns: true\r\n    ## 手动ack\r\n    listener:\r\n      direct:\r\n        acknowledge-mode: manual\r\n      simple:\r\n        acknowledge-mode: manual\r\n  elasticsearch:\r\n    rest:\r\n      uris: http://127.0.0.1:8851\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_article?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.article.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文章模块\r\n      description: 文章相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10', '5224eb524550c5df6b82f60bdad0ad15', '2022-07-27 17:52:46', '2022-07-27 17:52:47', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (501, 926, 'blog-file-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      # 限制文件上传的大小,默认1MB\r\n      max-file-size: 20MB\r\n      ## 请求大小，默认10MB\r\n      max-request-size: 20MB\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_file_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.file.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: 文件服务模块\r\n      description: 文件服务模块接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n# 文件路径相关配置\r\nftp:\r\n  # ip地址\r\n  host: 127.0.0.1\r\n  # 用户名\r\n  username: root\r\n  # 密码\r\n  password: viva202103(*\r\n  # 端口，默认22\r\n  port: 22\r\n  ## 基础文件路径\r\n  basePath: /usr/local/file\r\n  ## 图片的路径\r\n  imagePath: ${ftp.basePath}/images/\r\n  ## nginx映射的url\r\n  urlPrefix: http://127.0.0.1:9082\r\n  ## 图片映射的url\r\n  imageUrlPrefix: ${ftp.urlPrefix}/images/', '02d778a325dce87a978d45a450334619', '2022-07-27 17:53:19', '2022-07-27 17:53:19', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');
INSERT INTO `his_config_info` VALUES (499, 927, 'blog-auth-server-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  datasource:\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/mugu_blog_auth_server?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: Nov2014\r\n  # swagger相关的配置\r\n  swagger:\r\n    basePackage: com.mugu.blog.oauth.server.controller\r\n    author:\r\n      name: 不才陈某\r\n      email: 1655378771@qq.com\r\n      url: http://chenjiabing666.github.io\r\n    apiInfo:\r\n      title: OAuth server 模块\r\n      description: OAuth相关的接口\r\n      version: 1.0\r\n      termsOfServiceUrl: http://ip:${server.port}/${spring.application.name}\r\n      license: license\r\n      licenseUrl: licenseUrl\r\n  redis:\r\n    host: 127.0.0.1\r\n    password: live4dream\r\n    port: 6379\r\n    timeout: 15000\r\n    jedis:\r\n      pool:\r\n        max-active: 600\r\n        max-idle: 300\r\n        max-wait: 15000\r\n        min-idle: 10\r\noauth:\r\n  server:\r\n    signKey: blog\r\nfeign:\r\n  client:\r\n    config:\r\n      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间\r\n      default:\r\n        connectTimeout: 2000\r\n        readTimeout: 2000\r\n## 社交登录的配置，可以配置nacos中\r\nsecurity:\r\n  social:\r\n    ## github社交登录的配置，以下配置都需要去Github配置\r\n    github:\r\n      ## 是否开启github登录，默认false\r\n      enable: true\r\n      ## 客户端id\r\n      clientId: 1f0fb0ff59c43881c756\r\n      ## 秘钥\r\n      clientSecret: 5bdcb60ebddbab050a927162efaeb576f536c8f8\r\n      # 回调地址\r\n      redirectUrl: http://127.0.0.1/admin/github/callback.html\r\n    ## QQ的社交登录配置，以下配置都需要去QQ互联申请\r\n    qq:\r\n      ## 是否开启QQ社交登录，默认false\r\n      enable: true\r\n      ## appId\r\n      appId: 102018118\r\n      ## 秘钥\r\n      appKey: CJG0Yt22pNm14tTo\r\n      ## 回调地址\r\n      redirectUrl: https://www.java-family.cn/admin/qq/callback.html\r\n', '90e816ad5b6a6e07b0f5df1ee59ce3ad', '2022-07-27 17:57:34', '2022-07-27 17:57:35', NULL, '0:0:0:0:0:0:0:1', 'U', '729f3090-638e-4b45-bfde-b91312ffe3d0');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (4, '1', '729f3090-638e-4b45-bfde-b91312ffe3d0', 'dev', '开发环境', 'nacos', 1646703766023, 1646703766023);
INSERT INTO `tenant_info` VALUES (5, '1', 'e02f3cb6-5041-4bda-9a24-cd4b9844ce89', 'test', '测试环境', 'nacos', 1646703776273, 1646703776273);
INSERT INTO `tenant_info` VALUES (6, '1', '31776b73-b575-483f-988a-0d34e8c61f60', 'prod', '生产环境', 'nacos', 1646703798871, 1646703798871);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
